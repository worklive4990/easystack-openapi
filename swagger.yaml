---
openapi: 3.0.1
info:
  title: IAM OpenAPI
  description: IAM OpenAPI
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: '1.0'
servers:
  - url: /apis/iam
paths:
  /v1/domains:
    get:
      tags:
        - "Domains"
      summary: "List domains"
      description: "查询部门列表"
      parameters:
        - name: name
          in: query
          description: 部门名称
          schema:
            type: string
        - name: enabled
          in: query
          description: 根据部门的激活状态查询
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  domains:
                    type: array
                    items:
                      $ref: "#/components/schemas/Domain"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - "Domains"
      summary: Create domain
      description: "创建部门"
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainPostReq"
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  domain:
                      $ref: "#/components/schemas/Domain"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /v1/domains/{domain_id}:
    get:
      tags:
        - "Domains"
      summary: "Show domain details"
      description: "查询指定部门"
      parameters:
        - name: domain_id
          in: path
          description: 部门ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  domain:
                      $ref: "#/components/schemas/Domain"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    patch:
      tags:
        - "Domains"
      summary: "Update domain"
      description: "更新指定部门"
      parameters:
        - name: domain_id
          in: path
          description: 部门ID
          required: true
          schema:
            type: string
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainPatchReq"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  domain:
                      $ref: "#/components/schemas/Domain"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
    delete:
      tags:
        - "Domains"
      summary: "Delete domain"
      description: "删除指定部门"
      parameters:
        - name: domain_id
          in: path
          description: 部门ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict

  /v1/projects:
    get:
      tags:
        - "Projects"
      summary: "List projects"
      description: "查询项目列表"
      parameters:
        - name: name
          in: query
          description: 项目名称
          schema:
            type: string
        - name: enabled
          in: query
          description: 根据项目的激活状态过滤查询
          schema:
            type: string
        - name: domain_id
          in: query
          description: 根据部门的ID过滤查询
          schema:
            type: string
        - name: parent_id
          in: query
          description: 根据parent_id过滤查询
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: "#/components/schemas/Project"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - "Projects"
      summary: Create project
      description: "创建项目"
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectPostReq"
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                      $ref: "#/components/schemas/Project"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict

  /v1/projects/{project_id}:
    get:
      tags:
        - "Projects"
      summary: "Show project details"
      description: "查询指定项目"
      parameters:
        - name: project_id
          in: path
          description: 项目ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                      $ref: "#/components/schemas/Project"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    patch:
      tags:
        - "Projects"
      summary: "Update project"
      description: "更新指定项目"
      parameters:
        - name: project_id
          in: path
          description: 项目ID
          required: true
          schema:
            type: string
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectPatchReq"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                      $ref: "#/components/schemas/Project"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
    delete:
      tags:
        - "Projects"
      summary: "Delete project"
      description: "删除指定项目"
      parameters:
        - name: project_id
          in: path
          description: 项目ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /v1/groups:
    get:
      tags:
        - "Groups"
      summary: "List user groups"
      description: "查询用户组列表"
      parameters:
        - name: name
          in: query
          description: 用户组名称
          schema:
            type: string
        - name: domain_id
          in: query
          description: 根据部门的ID过滤查询
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    items:
                      $ref: "#/components/schemas/Group"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - "Groups"
      summary: Create group
      description: "创建用户组"
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPostPatchReq"
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                      $ref: "#/components/schemas/Group"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict

  /v1/groups/{group_id}:
    get:
      tags:
        - "Groups"
      summary: "Show group details"
      description: "查询指定用户组"
      parameters:
        - name: group_id
          in: path
          description: 用户组ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                      $ref: "#/components/schemas/Group"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    patch:
      tags:
        - "Groups"
      summary: "Update group"
      description: "更新指定用户组"
      parameters:
        - name: group_id
          in: path
          description: 用户组ID
          required: true
          schema:
            type: string
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPostPatchReq"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                      $ref: "#/components/schemas/Group"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
    delete:
      tags:
        - "Groups"
      summary: "Delete group"
      description: "删除指定用户组"
      parameters:
        - name: group_id
          in: path
          description: 用户组ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /v1/groups/{group_id}/users:
    get:
      tags:
        - "Groups"
      summary: "List users in group"
      description: "查询指定用户组中用户列表"
      parameters:
        - name: group_id
          in: path
          description: 用户组ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                      $ref: "#/components/schemas/User"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /v1/groups/{group_id}/users/{user_id}:
    put:
      tags:
        - "Groups"
      summary: "Add user to group"
      description: "增加指定用户到制定用户组"
      parameters:
        - name: group_id
          in: path
          description: 用户组ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: 用户ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    head:
      tags:
        - "Groups"
      summary: "Check whether user belongs to group"
      description: "校验指定用户是否属于指定用户组"
      parameters:
        - name: group_id
          in: path
          description: 用户组ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: 用户ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - "Groups"
      summary: "Remove user from group"
      description: "将指定用户从指定用户组移除"
      parameters:
        - name: group_id
          in: path
          description: 用户组ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: 用户ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /v1/users:
    get:
      tags:
        - "Users"
      summary: "List users"
      description: "查询用户列表"
      parameters:
        - name: name
          in: query
          description: 用户名称
          schema:
            type: string
        - name: domain_id
          in: query
          description: 根据部门ID查询
          schema:
            type: string
        - name: enabled
          in: query
          description: 根据用户的激活状态查询
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - "Users"
      summary: Create user
      description: "创建用户"
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPostReq"
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                      $ref: "#/components/schemas/User"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict

  /v1/users/{user_id}:
    get:
      tags:
        - "Users"
      summary: "Show user details"
      description: "查询指定用户"
      parameters:
        - name: user_id
          in: path
          description: 用户ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                      $ref: "#/components/schemas/User"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    patch:
      tags:
        - "Users"
      summary: "Update user"
      description: "更新指定用户"
      parameters:
        - name: user_id
          in: path
          description: 用户ID
          required: true
          schema:
            type: string
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPatchReq"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                      $ref: "#/components/schemas/User"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
    delete:
      tags:
        - "Users"
      summary: "Delete user"
      description: "删除指定用户"
      parameters:
        - name: user_id
          in: path
          description: 用户ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /v1/users/{user_id}/projects:
    get:
      tags:
        - "Users"
      summary: "List projects to which the user has authorization to access"
      description: "查询指定用户拥有权限的项目列表"
      parameters:
        - name: user_id
          in: path
          description: 用户ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                      $ref: "#/components/schemas/Project"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /v1/users/{user_id}/password:
    post:
      tags:
        - "Users"
      summary: "Change password for user"
      description: "修改用户密码"
      parameters:
        - name: user_id
          in: path
          description: 用户ID
          required: true
          schema:
            type: string
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPWPostReq"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict

  /v1/roles:
    get:
      tags:
        - "Roles"
      summary: "List roles"
      description: "查询角色列表"
      parameters:
        - name: name
          in: query
          description: 角色名称
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: "#/components/schemas/RoleListRes"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - "Roles"
      summary: Create role
      description: "创建角色"
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RolePostPatchReq"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                      $ref: "#/components/schemas/Role"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict

  /v1/roles/{role_id}:
    get:
      tags:
        - "Roles"
      summary: "Show role details"
      description: "查询指定角色"
      parameters:
        - name: role_id
          in: path
          description: 角色ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                      $ref: "#/components/schemas/Role"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    patch:
      tags:
        - "Roles"
      summary: "Update role"
      description: "更新指定角色"
      parameters:
        - name: role_id
          in: path
          description: 角色ID
          required: true
          schema:
            type: string
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RolePostPatchReq"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                      $ref: "#/components/schemas/Role"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
    delete:
      tags:
        - "Roles"
      summary: "Delete role"
      description: "删除指定角色"
      parameters:
        - name: role_id
          in: path
          description: 角色ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /v1/securities/password_strength:
    get:
      tags:
        - "Securities"
      summary: "Show password requirement details"
      description: "查询密码强度要求"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  password_strength:
                    $ref: "#/components/schemas/PasswordStrength"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - "Securities"
      summary: "Update password requirement"
      description: "更新密码强度要求"
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password_strength:
                  $ref: "#/components/schemas/PasswordStrength"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /v1/securities/single_sign_on:
    get:
      tags:
        - "Securities"
      summary: "Show share account information that login forbidden"
      description: "查询禁止共享账号登陆信息"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  single_sign_on:
                    $ref: "#/components/schemas/SingleSignOn"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - "Securities"
      summary: "Update share account information that login forbidden"
      description: "更新禁止共享账号登陆信息"
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                single_sign_on:
                  $ref: "#/components/schemas/SingleSignOn"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /v1/securities/account_lockout:
    get:
      tags:
        - "Securities"
      summary: "Show account lockout details"
      description: "查询账号锁定策略"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_lockout:
                    $ref: "#/components/schemas/AccountLockout"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - "Securities"
      summary: "Update account lockout"
      description: "更新账号锁定策略"
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_lockout:
                  $ref: "#/components/schemas/AccountLockout"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /v1/namespaces:
    get:
      tags:
        - Namespaces
      description: List namespaces.
      responses:
        '200':
          description: A list of namespaces.
          content:
            application/json:
              schema:
                type: object
                properties:
                  namespaces:
                    type: array
                    items:
                      $ref: '#/components/schemas/namespace'
        '503':
          $ref: '#/components/responses/503'

  /v1/namespaces/{namespace}:
    parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
        description: The name of namespace, which must be unique globally.
    put:
      tags:
        - Namespaces
      description: Ensure that a namespace exists. If not, create it.
      responses:
        '201':
          description: Namespace created.
        '503':
          $ref: '#/components/responses/503'

  /v1/permissions:
    get:
      tags:
        - Permissions
      operationId: list_permission
      parameters:
        - $ref: '#/components/parameters/namespace_query'
        - $ref: '#/components/parameters/paginate_page_size'
        - $ref: '#/components/parameters/paginate_from'
        - name: resource_type
          in: query
          schema:
            type: string
          description: Filter permissions by resource type
        - name: verb
          in: query
          schema:
            type: string
          description: Filter permissions by verb
      responses:
        '200':
          $ref: '#/components/responses/permission_list'
        '503':
          $ref: '#/components/responses/503'
    put:
      description: 'Batch put permissions to a namespace.
        WARNING: Will clear the namespace before adding.'
      tags:
        - Permissions
      requestBody:
        $ref: '#/components/requestBodies/permissions_add'
      responses:
        '201':
          description: Request was successful.
        '404':
          $ref: '#/components/responses/404'
        '503':
          $ref: '#/components/responses/503'
    post:
      description: 'Batch add permissions to a namespace.'
      tags:
        - Permissions
      requestBody:
        $ref: '#/components/requestBodies/permissions_add'
      responses:
        '201':
          description: Request was successful.
        '404':
          $ref: '#/components/responses/404'
        '503':
          $ref: '#/components/responses/503'
    # TODO: Batch delete?

  /v1/permission_bindings:
    get:
      tags:
        - PermissionBindings
      description: List permission bindings.
      parameters:
        - $ref: '#/components/parameters/namespace_query'
        - $ref: '#/components/parameters/paginate_from'
        - $ref: '#/components/parameters/paginate_page_size'
        - name: subject_id
          in: query
          schema:
            type: string
          description: Filter by subject. MUST use with subject_type.
        - name: subject_type
          in: query
          schema:
            type: string
          description: Filter by subject. MUST use with subject_id.
        - name: permission_id
          in: query
          schema:
            type: string
          description: Filter by permission ID.
      responses:
        '200':
          description: Request was successful.
          content:
            application/json:
              schema:
                type: object
                title: PermissionBindingListResponse
                properties:
                  permission_bindings:
                    type: array
                    items:
                      $ref: '#/components/schemas/permission_binding'
        '503':
          $ref: '#/components/responses/503'
    put:
      tags:
        - PermissionBindings
      description: 'Batch bind permissions to subjects.
        WARNING: Will clear the namespace before adding.'
      requestBody:
        $ref: '#/components/requestBodies/permission_bindings_add'
      responses:
        '201':
          description: Request was successful.
        '404':
          $ref: '#/components/responses/404'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - PermissionBindings
      description: 'Batch add binding between permissions and subjects.'
      requestBody:
        $ref: '#/components/requestBodies/permission_bindings_add'
      responses:
        '201':
          description: Request was successful.
        '404':
          $ref: '#/components/responses/404'
        '503':
          $ref: '#/components/responses/503'
    # TODO: Batch delete?

  /v1/permission_bindings/{permission_binding_id}:
    parameters:
      - name: permission_binding_id
        in: path
        required: true
        schema:
          type: string
        description: The permission binding ID.
    patch:
      tags:
        - PermissionBindings
      description: Update a permission binding.
      requestBody:
        $ref: '#/components/schemas/permission_binding_request'
      responses:
        '204':
          description: Request was successful.
        '404':
          $ref: '#/components/responses/404'
    delete:
      tags:
        - PermissionBindings
      description: Delete a permission binding.
      responses:
        '204':
          description: Request was successful.
        '404':
          $ref: '#/components/responses/404'

components:
  schemas:
    Domain:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        support_ldap:
          type: boolean
    Project:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        domain_id:
          type: string
        domain_name:
          type: string
        enabled:
          type: boolean
        parent_id:
          type: string
    Group:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        domain_id:
          type: string
        domain_name:
          type: string
    User:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        domain_id:
          type: string
        domain_name:
          type: string
        enabled:
          type: boolean
        support_ldap:
          type: boolean
        email:
          type: string
        password_expires_at:
          type: string
        created_at:
          type: string
        domain_role_id:
          type: string
    Role:
      type: object
      properties:
        type:
          type: string
          enum:
            - system
            - custom
        name:
          type: string
        id:
          type: string
        description:
          type: string
        created_at:
          type: string
    DomainPostReq:
      type: object
      required:
        - "domain"
      properties:
        domain:
          type: object
          required:
            - "name"
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
    DomainPatchReq:
      type: object
      required:
        - "domain"
      properties:
        domain:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
    ProjectPostReq:
      type: object
      required:
        - "project"
      properties:
        project:
          type: object
          required:
            - "name"
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            parent_id:
              type: string
            domain_id:
              type: string
    ProjectPatchReq:
      type: object
      required:
        - "project"
      properties:
        project:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            domain_id:
              type: string
    GroupPostPatchReq:
      type: object
      required:
        - "group"
      properties:
        group:
          type: object
          required:
            - "name"
          properties:
            name:
              type: string
            description:
              type: string
            domain_id:
              type: string
    UserPostReq:
      type: object
      required:
        - "user"
      properties:
        user:
          type: object
          required:
            - "name"
            - "domain_id"
            - "password"
            - "email"
            - "domain_role_id"
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            domain_id:
              type: string
            password:
              type: string
            email:
              type: string
            domain_role_id:
              type: string
    UserPatchReq:
      type: object
      required:
        - "user"
      properties:
        user:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            password:
              type: string
    UserPWPostReq:
      type: object
      required:
        - "user"
      properties:
        user:
          type: object
          required:
            - "original_password"
            - "password"
          properties:
            original_password:
              type: string
            password:
              type: string
    RolePostPatchReq:
      type: object
      required:
        - "role"
      properties:
        role:
          type: object
          required:
            - "name"
          properties:
            name:
              type: string
            description:
              type: string
    RoleListRes:
      type: object
      properties:
        type:
          type: string
          enum:
            - system
            - custom
        name:
          type: string
        id:
          type: string
        description:
          type: string
        assign_users:
          type: array
          items:
            $ref: "#/components/schemas/User"
        assign_groups:
          type: array
          items:
            $ref: "#/components/schemas/Group"
        created_at:
          type: string
    PasswordStrength:
      type: object
      properties:
        policy:
          type: string
          enum:
            - any
            - alpha_digit
            - least_upper
            - least_upper_and_special
        length:
          type: number
    SingleSignOn:
      type: object
      properties:
        enabled:
          type: boolean
    AccountLockout:
      type: object
      properties:
        lockout_minutes:
          type: number
        enabled:
          type: boolean
        interval_minutes:
          type: number
        max_attempts:
          type: number
    namespace:
      type: object
      properties:
        name:
          type: string
          description: The name of the namespace, which MUST be unique globally.
        description:
          type: string
          description: The description of the namespace.
    subjects:
      type: object
      description: A group of `users` or `user groups` or `roles` etc.
      properties:
        type:
          type: string
        ids:
          type: array
          items:
            type: string
    permission:
      type: object
      properties:
        id:
          type: string
          description: The ID of the permission.
        namespace:
          type: string
          description: The name of the namespace of the permission.
        verb:
          type: string
          description: The operation to the resource.
        resource_type:
          type: string
          description: The type of the resource.
        description:
          type: string
          description: The description of the permission.
    permission_binding:
      type: object
      properties:
        id:
          type: string
          description: The ID of the permission binding.
        namespace:
          type: string
          description: The namespace of the permission binding.
        permission_id:
          type: string
          description: The ID of the permission.
        resource_ids:
          type: array
          items:
            type: string
        subjects:
          $ref: '#/components/schemas/subjects'
    permission_binding_request:
      type: object
      properties:
        namespace: 
          type: string
        permission_id:
          type: string
          description: The ID of the permission.
        resource_ids:
          type: array
          items:
            type: string
        subjects:
          $ref: '#/components/schemas/subjects'
    error_response:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        data:
          nullable: true
          description: Can be any value.
  requestBodies:
    permissions_add:
      content:
        application/json:
          schema:
            title: PermissionAddRequest
            type: object
            required:
              - permissions
            properties:
              namespace:
                type: string
              permissions:
                type: array
                items:
                  type: object
                  title: PermissionAddPermission
                  required:
                    - verb
                    - resource_type
                  properties:
                    verb:
                      type: string
                      description: The operation to the resource.
                    resource_type:
                      type: string
                      description: The type of the resource.
                    description:
                      type: string
                      description: The description of the permission.
    permission_bindings_add:
      content:
        application/json:
          schema:
            type: object
            properties:
              permission_bindings:
                type: array
                items:
                  $ref: '#/components/schemas/permission_binding_request'
  responses:
    permission_list:
      description: A list of permissions.
      content:
        application/json:
          schema:
            type: object
            title: PermissionListResponse
            properties:
              permissions:
                type: array
                items:
                  $ref: '#/components/schemas/permission'
    '404':
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
    '503':
      description: Backend service may be unavailable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
  parameters:
    namespace_query:
      name: namespace
      in: query
      schema:
        type: string
      description: Filter response by namespace.
    paginate_from:
      name: from
      in: query
      schema:
        type: integer
        default: 0
      description: Paginate from item index. Default is `0`.
    paginate_page_size:
      name: page_size
      in: query
      schema:
        type: integer
        default: -1
      description: Paginate page size. `-1` means infinite, ehich will return all of the items. Default is `-1`.

