---
openapi: 3.0.1
info:
  title: IAM OpenAPI
  description: IAM OpenAPI
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: '1.0'
servers:
  - url: /apis/iam
paths:
  /v1/domains:
    get:
      tags:
        - "Domains"
      summary: "List domains"
      description: "查询部门列表"
      parameters:
        - name: name
          in: query
          description: 部门名称
          schema:
            type: string
        - name: enabled
          in: query
          description: 根据部门的激活状态查询
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  domains:
                    type: array
                    items:
                      $ref: "#/components/schemas/Domain"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - "Domains"
      summary: Create domain
      description: "创建部门"
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainPostReq"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  domain:
                      $ref: "#/components/schemas/Domain"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /v1/domains/{domain_id}:
    get:
      tags:
        - "Domains"
      summary: "Show domain details"
      description: "查询指定domain"
      parameters:
        - name: domain_id
          in: path
          description: 部门ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  domain:
                      $ref: "#/components/schemas/Domain"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    patch:
      tags:
        - "Domains"
      summary: "Update domain"
      description: "更新指定domain"
      parameters:
        - name: domain_id
          in: path
          description: 部门ID
          required: true
          schema:
            type: string
      requestBody:
        description: 请求数据
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainPatchReq"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  domain:
                      $ref: "#/components/schemas/Domain"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
    delete:
      tags:
        - "Domains"
      summary: "Delete domain"
      description: "删除指定domain"
      parameters:
        - name: domain_id
          in: path
          description: 部门ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict

  /v1/projects:
    get:
      tags:
        - "Projects"
      summary: "List projects"
      description: "查询项目列表"
      parameters:
        - name: name
          in: query
          description: 项目名称
          schema:
            type: string
        - name: enabled
          in: query
          description: 根据项目的激活状态过滤查询
          schema:
            type: string
        - name: domain_id
          in: query
          description: 根据部门的ID过滤查询
          schema:
            type: string
        - name: parent_id
          in: query
          description: 根据parent_id过滤查询
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: "#/components/schemas/Project"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /v1/projects/{project_id}:
    get:
      tags:
        - "Projects"
      summary: "Show project details"
      description: "查询指定project"
      parameters:
        - name: project_id
          in: path
          description: 项目ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                      $ref: "#/components/schemas/Project"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found


components:
  schemas:
    Domain:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        support_ldap:
          type: boolean
    Project:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        domain_id:
          type: string
        domain_name:
          type: string
        enabled:
          type: boolean
        parent_id:
          type: string
    UserGroup:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        domain_id:
          type: string
        domain_name:
          type: string
        enabled:
          type: boolean
    User:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        domain_id:
          type: string
        domain_name:
          type: string
        enabled:
          type: boolean
        support_ldap:
          type: boolean
        email:
          type: string
    Role:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        id:
          type: string
        description:
          type: string
        assign_users:
          type: number
        assign_usergroups:
          type: number
    DomainPostReq:
      type: object
      required:
        - "domain"
      properties:
        domain:
          type: object
          required:
            - "name"
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
    DomainPatchReq:
      type: object
      required:
        - "domain"
      properties:
        domain:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean